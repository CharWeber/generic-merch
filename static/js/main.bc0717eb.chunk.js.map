{"version":3,"sources":["components/Header.js","components/RestockForm.js","components/MerchDetail.js","components/Merch.js","components/MerchList.js","components/ReusableForm.js","components/NewMerchForm.js","components/EditMerch.js","components/StoreControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","RestockForm","props","Fragment","onSubmit","formHandler","type","name","placeholder","MerchDetail","merch","onMerchDelete","onMerchEdit","onMerchBuy","currentVisibleState","quantity","title","onClick","id","e","preventDefault","onMerchRestock","parseInt","target","qty","value","Merch","MerchStyles","imgStyle","imgSRC","float","Visible","margin","padding","backgroundColor","fontFamily","borderColor","whenMerchClicked","style","src","alt","color","console","log","MerchList","mainMerchList","map","OnMerchSelection","key","ReusableForm","formSubmissionHandler","buttontext","NewMerchForm","event","onNewMerchCreation","v4","EditMerch","onEditMerch","StoreControl","handleClick","state","selectedMerch","setState","editing","prevState","formVisible","handleNewMerchFormSubmission","newMerch","newMainMerchList","concat","handleChangingSelectedMerch","newSelectedMerch","filter","handleDeleteMerch","handleEditMerch","merchToEdit","editedMainMerchList","handleEdit","handleBuyMerch","selectMerch","handleRestockMerch","dataLoaded","currentlyVisibleState","this","React","Component","App","paddingTop","width","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc0717eb.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(){\n  return(\n    <h1>Merch Booth</h1>\n  );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction RestockForm(props){\n  return(\n    <React.Fragment>\n      <form onSubmit={props.formHandler}>\n        <input\n          type='number'\n          name='qty'\n          placeholder='How Many?' />\n          <br/>\n        <button type='submit'>Restock</button>\n      </form>\n    </React.Fragment>\n  );\n}\n\n\n\nexport default RestockForm","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport RestockForm from \"./RestockForm\";\n\nfunction MerchDetail(props){\n  const {merch, onMerchDelete, onMerchEdit, onMerchBuy} = props;\n  let currentVisibleState = null;\n\n  function handleRestockForm(e){\n    e.preventDefault();\n    props.onMerchRestock(merch.id, parseInt(e.target.qty.value))\n  }\n\n  if (merch.quantity <=0){\n    currentVisibleState = \n    <React.Fragment>\n      <h1>{merch.title}</h1>\n      <br/>\n      <p>{merch.type}</p>\n      <p>OUT OF STOCK</p>\n      <button onClick={() => onMerchDelete(merch.id)}>Delete Merch</button>\n      <button onClick={() => onMerchEdit(merch.id)}>Update Merch</button>\n      <RestockForm formHandler={handleRestockForm}/>\n    </React.Fragment>\n  }else{\n    currentVisibleState = \n    <React.Fragment>\n      <h1>{merch.title}</h1>\n      <br/>\n      <p>{merch.type}</p>\n      <p>{merch.quantity}</p>\n      <button onClick={() => onMerchDelete(merch.id)}>Delete Merch</button>\n      <button onClick={() => onMerchEdit(merch.id)}>Update Merch</button>\n      <button onClick={() => onMerchBuy(merch.id)}>Buy Merch</button>\n    </React.Fragment>\n  }\n  return (\n    <React.Fragment>\n      {currentVisibleState}\n    </React.Fragment>\n  );\n}\n\nMerchDetail.propTypes= {\n  merch: PropTypes.object,\n  onMerchDelete: PropTypes.func,\n  onMerchEdit: PropTypes.func,\n  onMerchBuy: PropTypes.func,\n  onMerchRestock: PropTypes.func,\n}\nexport default MerchDetail;","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nfunction Merch(props){\n  let MerchStyles= {};\n  let img = props.imgSRC;\n  let imgStyle = {\n    float: 'left'\n  }\n  let WarningStyle = {\n    color: 'red'\n  };\n  let Visible = null;\n\n  if (props.type === 'Clothing'){\n    MerchStyles = {\n      margin: '10px',\n      padding: '5px',\n      backgroundColor: '#DAFFA0',\n      fontFamily: 'sans-serif',\n      borderColor: 'black',\n    }\n  }else if (props.type === 'Music'){\n    MerchStyles = {\n      margin: '10px',\n      padding: '5px',\n      backgroundColor: '#ffb1A0',\n      fontFamily: 'sans-serif',\n      borderColor: 'black',\n    }\n  }else if (props.type === 'Accesory'){\n    MerchStyles = {\n      margin: '10px',\n      padding: '5px',\n      backgroundColor: '#A0FFCD',\n      fontFamily: 'sans-serif',\n      borderColor: 'black',\n    }\n  }else {\n    MerchStyles = {\n      margin: '10px',\n      padding: '5px',\n      backgroundColor: '#D9A0FF',\n      fontFamily: 'sans-serif',\n      borderColor: 'black',\n    }\n  }\n\n  if (props.quantity <= 0){\n    Visible =     \n    <React.Fragment>\n    <div onClick = {() => props.whenMerchClicked(props.id)}>\n      <div style={MerchStyles}>\n        <img style={imgStyle} src={props.imgSRC} alt=\"placeholder img\"/>\n        <h3>{props.title}</h3>\n        <hr/>\n        <p>{props.type}</p>\n        <p style={WarningStyle}>OUT OF STOCK</p>\n      </div>\n    </div>\n  </React.Fragment>\n  }else{\n    Visible = \n    <React.Fragment>\n    <div onClick = {() => props.whenMerchClicked(props.id)}>\n      <div style={MerchStyles}>\n      <img style={imgStyle} src={props.imgSRC} alt=\"placeholder img\"/>\n        <h3>{props.title}</h3>\n        <hr/>\n        <p>{props.type}</p>\n        <p>in Stock: {props.quantity}</p>\n      </div>\n    </div>\n  </React.Fragment>\n  }\n  console.log(props);\n  return(\n    <React.Fragment>\n      {Visible}\n      \n    </React.Fragment>\n  );\n}\n\nMerch.propTypes ={\n  whenMerchClicked: PropTypes.func,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  quantity: PropTypes.number,\n  id: PropTypes.string,\n  key: PropTypes.string,\n  imgSRC: PropTypes.string\n}\n\nexport default Merch;","import React from \"react\";\nimport Merch from \"./Merch\";\nimport PropTypes from 'prop-types';\n\n\nfunction MerchList(props){\n  return(\n    <React.Fragment>\n      {props.mainMerchList.map((merch) => \n        <Merch\n          whenMerchClicked = {props.OnMerchSelection}\n          title={merch.title}\n          type={merch.type}\n          quantity={merch.quantity}\n          id={merch.id}\n          key={merch.id}\n          imgSRC={merch.imgSRC}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nMerchList.propTypes ={\n  mainMerchList: PropTypes.array,\n  OnMerchSelection: PropTypes.func\n}\n\n\nexport default MerchList;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction ReusableForm(props){\n  return (\n    <React.Fragment>\n      <form onSubmit={props.formSubmissionHandler}>\n        <input\n          type='text'\n          name='title'\n          placeholder='Merch Name?' />\n          <br/>\n          <select name=\"type\">\n          <option value=\"Clothing\">Clothing</option>\n          <option value=\"Accesory\">Accesories</option>\n          <option value=\"Music\">Music</option>\n          <option value=\"Misc\">Misc</option>\n        </select>\n          <br/>\n        <input\n          type='number'\n          name='quantity'\n          placeholder='how Many?' />\n          <br/>\n        <button type='submit'>{props.buttontext}</button>\n      </form>\n    </React.Fragment>\n  );\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttontext: PropTypes.string\n};\n\nexport default ReusableForm;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { v4} from 'uuid';\nimport ReusableForm from \"./ReusableForm\";\n\nfunction NewMerchForm(props){\n  function handleNewMerchFormSubmission(event) {\n    event.preventDefault();\n    props.onNewMerchCreation({\n      title: event.target.title.value,\n      type: event.target.type.value,\n      quantity: event.target.quantity.value,\n      id: v4(),\n      imgSRC:'https://picsum.photos/100'\n    });\n  }\n  return(\n    <React.Fragment>\n      <ReusableForm \n        formSubmissionHandler={handleNewMerchFormSubmission}\n        buttontext={props.buttontext} />\n    </React.Fragment>\n  );\n}\n\nNewMerchForm.propTypes ={\n  onNewMerchCreation: PropTypes.func,\n  buttontext: PropTypes.string\n}\n\nexport default NewMerchForm;","import React from \"react\";\nimport ReusableForm from \"./ReusableForm\";\nimport PropTypes from 'prop-types';\n\nfunction EditMerch(props){\n  const { merch } = props;\n  function handleEditTicketFormSubmission(e){\n    e.preventDefault();\n    props.onEditMerch({\n      title: e.target.title.value,\n      type: e.target.type.value,\n      quantity: e.target.quantity.value,\n      id: merch.id})\n  }\n\n\n  return(\n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleEditTicketFormSubmission}\n        buttontext=\"Update Ticket\" />\n    </React.Fragment>\n  );\n}\n\nEditMerch.propTypes = {\n  merch: PropTypes.object,\n  onEditMerch: PropTypes.func\n};\n\nexport default EditMerch;","import React from \"react\";\nimport MerchDetail from \"./MerchDetail\";\nimport MerchList from \"./MerchList\";\nimport NewMerchForm from \"./NewMerchForm\";\nimport EditMerch from \"./EditMerch\";\n\nclass StoreControl extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      formVisible: false,\n      mainMerchList: [],\n      selectedMerch: null,\n      editing: false,\n      dataLoaded: false,\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.selectedMerch != null){\n      this.setState({selectedMerch: null, editing: false})\n    }\n    else{\n      this.setState(prevState => ({\n        formVisible: !prevState.formVisible,\n        selectedMerch: null,\n        editing: false\n      }))\n    }\n  }\n\n  handleNewMerchFormSubmission = (newMerch) => {\n    const newMainMerchList = this.state.mainMerchList.concat(newMerch);\n    this.setState({\n      mainMerchList: newMainMerchList,\n      formVisible: false\n    })\n  }\n  \n  handleChangingSelectedMerch = (id) => {\n    const newSelectedMerch = this.state.mainMerchList.filter(merch => merch.id === id)[0];\n    this.setState({selectedMerch: newSelectedMerch});\n  }\n\n  handleDeleteMerch = (id) => {\n    const newMainMerchList = this.state.mainMerchList.filter(merch => merch.id !== id);\n    this.setState({\n      mainMerchList: newMainMerchList,\n      selectedMerch: null\n    })\n  }\n\n  handleEditMerch = (merchToEdit) => {\n    const editedMainMerchList = this.state.mainMerchList\n    .filter(merch => merch.id !== this.state.selectedMerch.id)\n    .concat(merchToEdit);\n    this.setState({\n      mainMerchList: editedMainMerchList,\n      editing: false,\n      selectedMerch: null\n  });\n  }\n  handleEdit = ()=>{\n    this.setState({editing: true})\n  }\n\n  handleBuyMerch = (id) => {\n    let selectMerch = this.state.mainMerchList.filter(merch => merch.id === id);\n    selectMerch[0].quantity -= 1;\n    let newMainMerchList = this.state.mainMerchList.filter(merch => merch.id !== id)\n      .concat(selectMerch);\n    this.setState({\n      mainMerchList: newMainMerchList,\n      selectedMerch: null,\n      editing: false\n    })\n  }\n\n  handleRestockMerch = (id, qty) => {\n    let selectMerch = this.state.mainMerchList.filter(merch => merch.id ===id);\n    selectMerch[0].quantity += qty;\n    let newMainMerchList = this.state.mainMerchList.filter(merch => merch.id !== id)\n      .concat(selectMerch);\n    this.setState({\n      mainMerchList: newMainMerchList,\n      selectedMerch: null,\n      editing: false\n    })\n  }\n\n\n  render(){\n    let currentlyVisibleState = null;\n    let buttontext = null;\n\n    if (!this.state.dataLoaded){\n      let newMainMerchList = [\n        {\n          title: 'T-Shirt',\n          type: 'Clothing',\n          quantity: 1,\n          id: '1',\n          key: '1',\n          imgSRC: 'https://picsum.photos/131'\n        },\n        {\n          title: 'Earrings',\n          type: 'Accesory',\n          quantity: 5,\n          id: '2',\n          key: '2',\n          imgSRC: 'https://picsum.photos/132'\n        },\n        {\n          title: 'Music CD',\n          type: 'Music',\n          quantity: 5,\n          imgSRC: 'https://picsum.photos/133',\n          id: '3',\n          key: '3'\n        },\n        {\n          title: 'Figurine Set',\n          type: 'Misc',\n          quantity: 5,\n          id: '4',\n          key: '4',\n          imgSRC: 'https://picsum.photos/134'\n        }]\n      this.setState({\n        mainMerchList: newMainMerchList,\n        dataLoaded: true\n      })\n    }\n\n\n    if (this.state.editing){\n      currentlyVisibleState = <EditMerch  \n      merch={this.state.selectedMerch}\n      onEditMerch={this.handleEditMerch}\n      />\n      buttontext = \"Return\"\n    }else if (this.state.selectedMerch != null){\n      currentlyVisibleState = <MerchDetail  \n      merch={this.state.selectedMerch} \n      onMerchBuy = {this.handleBuyMerch}\n      onMerchDelete={this.handleDeleteMerch}\n      onMerchEdit={this.handleEdit}\n      onMerchRestock={this.handleRestockMerch}\n      />\n      buttontext = \"Return\"\n    }else if (!this.state.formVisible){\n      currentlyVisibleState = <MerchList \n      mainMerchList = {this.state.mainMerchList} \n      OnMerchSelection={this.handleChangingSelectedMerch}\n      />\n      buttontext = \"Add Merch\";\n    }\n    else if (this.state.formVisible){\n      currentlyVisibleState = <NewMerchForm onNewMerchCreation={this.handleNewMerchFormSubmission}\n      buttontext = \"Submit\" />\n      buttontext = \"Return\";\n    }\n    return(\n      <React.Fragment>\n      {currentlyVisibleState}\n      <button onClick={this.handleClick}>{buttontext}</button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default StoreControl;","import React from \"react\";\nimport Header from \"./Header\";\nimport StoreControl from \"./StoreControl\";\n\nfunction App() {\n  const containerStyles = {\n    margin: 'auto',\n    paddingTop: '50px',\n    width: '80vw',\n    textAlign: 'center'\n  }\n  return (\n    <React.Fragment>\n      <div style={containerStyles}>\n        <Header />\n        <StoreControl />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}