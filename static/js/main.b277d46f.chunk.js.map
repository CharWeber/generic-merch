{"version":3,"sources":["components/Header.js","components/RestockForm.js","components/MerchDetail.js","components/Merch.js","components/MerchList.js","components/ReusableForm.js","components/NewMerchForm.js","components/EditMerch.js","components/StoreControl.js","components/App.js","reportWebVitals.js","index.js","reducers/merch-list-reducer.js"],"names":["Header","RestockForm","props","Fragment","onSubmit","formHandler","type","name","placeholder","className","MerchDetail","merch","onMerchDelete","onMerchEdit","onMerchBuy","currentVisibleState","quantity","title","category","onClick","id","e","preventDefault","onMerchRestock","parseInt","target","qty","value","Merch","MerchStyles","img","imgSRC","imgStyle","float","Visible","margin","padding","backgroundColor","fontFamily","borderColor","whenMerchClicked","style","src","alt","color","console","log","MerchList","Object","values","mainMerchList","map","OnMerchSelection","key","ReusableForm","formSubmissionHandler","buttontext","NewMerchForm","event","onNewMerchCreation","v4","EditMerch","onEditMerch","StoreControl","handleClick","state","selectedMerch","setState","editing","prevState","formVisible","handleNewMerchFormSubmission","newMerch","dispatch","handleChangingSelectedMerch","handleDeleteMerch","handleEditMerch","merchToEdit","handleEdit","handleBuyMerch","selectMerch","handleRestockMerch","dataLoaded","currentlyVisibleState","this","forEach","action","class","React","Component","connect","App","paddingTop","width","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","assign","newState","subscribe","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b277d46f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(){\n  return(\n    <h1>Merch Booth</h1>\n  );\n}\n\nexport default Header;","import React from \"react\";\n\nfunction RestockForm(props){\n  return(\n    <React.Fragment>\n      <form onSubmit={props.formHandler}>\n        <input\n          type='number'\n          name='qty'\n          placeholder='How Many?' />\n          <br/>\n        <button type='submit' className= \"btn btn-light\">Restock</button>\n      </form>\n    </React.Fragment>\n  );\n}\n\n\n\nexport default RestockForm","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport RestockForm from \"./RestockForm\";\n\nfunction MerchDetail(props){\n  const {merch, onMerchDelete, onMerchEdit, onMerchBuy} = props;\n  let currentVisibleState = null;\n\n  function handleRestockForm(e){\n    e.preventDefault();\n    props.onMerchRestock(merch.id, parseInt(e.target.qty.value))\n  }\n\n  if (merch.quantity <=0){\n    currentVisibleState = \n    <React.Fragment>\n      <h1>{merch.title}</h1>\n      <br/>\n      <p>{merch.category}</p>\n      <p>OUT OF STOCK</p>\n      <button onClick={() => onMerchDelete(merch.id)} className= \"btn btn-light\">Delete Merch</button>\n      <button onClick={() => onMerchEdit(merch.id)} className= \"btn btn-light\">Update Merch</button>\n      <RestockForm formHandler={handleRestockForm}/>\n    </React.Fragment>\n  }else{\n    currentVisibleState = \n    <React.Fragment>\n      <h1>{merch.title}</h1>\n      <br/>\n      <p>{merch.category}</p>\n      <p>{merch.quantity}</p>\n      <button onClick={() => onMerchDelete(merch.id)} className= \"btn btn-light\">Delete Merch</button>\n      <button onClick={() => onMerchEdit(merch.id)} className= \"btn btn-light\">Update Merch</button>\n      <button onClick={() => onMerchBuy(merch.id)} className= \"btn btn-light\">Buy Merch</button>\n    </React.Fragment>\n  }\n  return (\n    <React.Fragment>\n      {currentVisibleState}\n    </React.Fragment>\n  );\n}\n\nMerchDetail.propTypes= {\n  merch: PropTypes.object,\n  onMerchDelete: PropTypes.func,\n  onMerchEdit: PropTypes.func,\n  onMerchBuy: PropTypes.func,\n  onMerchRestock: PropTypes.func,\n}\nexport default MerchDetail;","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nfunction Merch(props){\n  let MerchStyles= {};\n  let img = props.imgSRC;\n  let imgStyle = {\n    float: 'left'\n  }\n  let WarningStyle = {\n    color: 'red'\n  };\n  let Visible = null;\n\n  if (props.category === 'Clothing'){\n    MerchStyles = {\n      margin: '10px',\n      padding: '25px',\n      backgroundColor: '#DAFFA0',\n      fontFamily: 'sans-serif',\n      borderColor: 'black',\n    }\n  }else if (props.category === 'Music'){\n    MerchStyles = {\n      margin: '10px',\n      padding: '25px',\n      backgroundColor: '#ffb1A0',\n      fontFamily: 'sans-serif',\n      borderColor: 'black',\n    }\n  }else if (props.category === 'Accesory'){\n    MerchStyles = {\n      margin: '10px',\n      padding: '25px',\n      backgroundColor: '#A0FFCD',\n      fontFamily: 'sans-serif',\n      borderColor: 'black',\n    }\n  }else {\n    MerchStyles = {\n      margin: '10px',\n      padding: '25px',\n      backgroundColor: '#D9A0FF',\n      fontFamily: 'sans-serif',\n      borderColor: 'black',\n    }\n  }\n\n  if (props.quantity <= 0){\n    Visible =     \n    <React.Fragment>\n    <div onClick = {() => props.whenMerchClicked(props.id)}>\n      <div style={MerchStyles}>\n        <img style={imgStyle} src={img} alt=\"placeholder img\"/>\n        <h3>{props.title}</h3>\n        <hr/>\n        <p>{props.category}</p>\n        <p style={WarningStyle}>OUT OF STOCK</p>\n      </div>\n    </div>\n  </React.Fragment>\n  }else{\n    Visible = \n    <React.Fragment>\n    <div onClick = {() => props.whenMerchClicked(props.id)}>\n      <div style={MerchStyles}>\n      <img style={imgStyle} src={img} alt=\"placeholder img\"/>\n        <h3>{props.title}</h3>\n        <hr/>\n        <p>{props.category}</p>\n        <p>in Stock: {props.quantity}</p>\n      </div>\n    </div>\n  </React.Fragment>\n  }\n  console.log(props);\n  return(\n    <React.Fragment>\n      {Visible}\n      \n    </React.Fragment>\n  );\n}\n\nMerch.propTypes ={\n  whenMerchClicked: PropTypes.func,\n  title: PropTypes.string,\n  category: PropTypes.string,\n  quantity: PropTypes.number,\n  id: PropTypes.string,\n  key: PropTypes.string,\n  imgSRC: PropTypes.string\n}\n\nexport default Merch;","import React from \"react\";\nimport Merch from \"./Merch\";\nimport PropTypes from 'prop-types';\n\n\nfunction MerchList(props){\n  return(\n    <React.Fragment>\n      {Object.values(props.mainMerchList).map((merch) => \n        <Merch\n          whenMerchClicked = {props.OnMerchSelection}\n          title={merch.title}\n          category={merch.category}\n          quantity={merch.quantity}\n          id={merch.id}\n          key={merch.id}\n          imgSRC={merch.imgSRC}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nMerchList.propTypes ={\n  mainMerchList: PropTypes.object,\n  OnMerchSelection: PropTypes.func\n}\n\n\nexport default MerchList;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction ReusableForm(props){\n  return (\n    <React.Fragment>\n      <form onSubmit={props.formSubmissionHandler}>\n        <input\n          type='text'\n          name='title'\n          placeholder='Merch Name?' />\n          <br/>\n          <select name=\"category\">\n          <option value=\"Clothing\">Clothing</option>\n          <option value=\"Accesory\">Accesories</option>\n          <option value=\"Music\">Music</option>\n          <option value=\"Misc\">Misc</option>\n        </select>\n          <br/>\n        <input\n          type='number'\n          name='quantity'\n          placeholder='how Many?' />\n          <br/>\n        <button type='submit' className= \"btn btn-light\">{props.buttontext}</button>\n      </form>\n    </React.Fragment>\n  );\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttontext: PropTypes.string\n};\n\nexport default ReusableForm;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { v4} from 'uuid';\nimport ReusableForm from \"./ReusableForm\";\n\nfunction NewMerchForm(props){\n  function handleNewMerchFormSubmission(event) {\n    event.preventDefault();\n    props.onNewMerchCreation({\n      title: event.target.title.value,\n      category: event.target.category.value,\n      quantity: event.target.quantity.value,\n      id: v4(),\n      imgSRC:'https://picsum.photos/130'\n    });\n  }\n  return(\n    <React.Fragment>\n      <ReusableForm \n        formSubmissionHandler={handleNewMerchFormSubmission}\n        buttontext={props.buttontext} />\n    </React.Fragment>\n  );\n}\n\nNewMerchForm.propTypes ={\n  onNewMerchCreation: PropTypes.func,\n  buttontext: PropTypes.string\n}\n\nexport default NewMerchForm;","import React from \"react\";\nimport ReusableForm from \"./ReusableForm\";\nimport PropTypes from 'prop-types';\n\nfunction EditMerch(props){\n  const { merch } = props;\n  function handleEditTicketFormSubmission(e){\n    e.preventDefault();\n    props.onEditMerch({\n      title: e.target.title.value,\n      category: e.target.category.value,\n      quantity: e.target.quantity.value,\n      id: merch.id})\n  }\n\n\n  return(\n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleEditTicketFormSubmission}\n        buttontext=\"Update Ticket\" />\n    </React.Fragment>\n  );\n}\n\nEditMerch.propTypes = {\n  merch: PropTypes.object,\n  onEditMerch: PropTypes.func\n};\n\nexport default EditMerch;","import React from \"react\";\nimport MerchDetail from \"./MerchDetail\";\nimport MerchList from \"./MerchList\";\nimport NewMerchForm from \"./NewMerchForm\";\nimport EditMerch from \"./EditMerch\";\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\nclass StoreControl extends React.Component{\n\n  constructor(props){\n    super(props);\n    console.log(props);\n    this.state = {\n      formVisible: false,\n      selectedMerch: null,\n      editing: false,\n      dataLoaded: false,\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.selectedMerch != null){\n      this.setState({selectedMerch: null, editing: false})\n    }\n    else{\n      this.setState(prevState => ({\n        formVisible: !prevState.formVisible,\n        selectedMerch: null,\n        editing: false\n      }))\n    }\n  }\n\n  handleNewMerchFormSubmission = (newMerch) => {\n    const { dispatch } = this.props;\n    const { id, title, category, quantity, key, imgSRC } = newMerch;\n    const action = {\n      type: 'ADD_MERCH',\n      title: title,\n      category: category,\n      quantity: quantity,\n      id: id,\n      key: key,\n      imgSRC: imgSRC\n    }\n    dispatch(action);\n    this.setState({\n      formVisible: false\n    });\n  }\n  \n  handleChangingSelectedMerch = (id) => {\n    const selectedMerch = this.props.mainMerchList[id];\n    this.setState({selectedMerch: selectedMerch});\n  }\n\n  handleDeleteMerch = (id) => {\n    const {dispatch} = this.props;\n    const action = {\n      type: 'DELETE_MERCH',\n      id: id\n    }\n    dispatch(action);\n    this.setState({selectedMerch: null});\n  }\n\n  handleEditMerch = (merchToEdit) => {\n    const { dispatch } = this.props;\n    const { id, title, category, quantity, key, imgSRC } = merchToEdit;\n    const action = {\n      type: 'ADD_MERCH',\n      title: title,\n      category: category,\n      quantity: quantity,\n      id: id,\n      key: key,\n      imgSRC: imgSRC\n    }\n    dispatch(action);\n    this.setState({\n      editing: false,\n      selectedMerch: null\n  });\n  }\n\n  handleEdit = ()=>{\n    this.setState({editing: true})\n  }\n\n  handleBuyMerch = (id) => {\n    let selectMerch = this.props.mainMerchList[id]\n    selectMerch.quantity -= 1;\n    const { dispatch } = this.props;\n    const { title, category, quantity, key, imgSRC } = selectMerch;\n    const action = {\n      type: 'ADD_MERCH',\n      title: title,\n      category: category,\n      quantity: quantity,\n      id: id,\n      key: key,\n      imgSRC: imgSRC\n    }\n    dispatch(action);\n    this.setState({\n      editing: false,\n      selectedMerch: null\n  });\n  }\n\n  handleRestockMerch = (id, qty) => {\n    let selectMerch = this.props.mainMerchList[id]\n    selectMerch.quantity += qty;\n    const { dispatch } = this.props;\n    const { title, category, quantity, key, imgSRC } = selectMerch;\n    const action = {\n      type: 'ADD_MERCH',\n      title: title,\n      category: category,\n      quantity: quantity,\n      id: id,\n      key: key,\n      imgSRC: imgSRC\n    }\n    dispatch(action);\n    this.setState({\n      editing: false,\n      selectedMerch: null\n  });\n  }\n\n\n  render(){\n    let currentlyVisibleState = null;\n    let buttontext = null;\n\n    if (!this.state.dataLoaded){\n      const {dispatch} = this.props;\n      const merchData = [\n        {\n          type: 'ADD_MERCH',\n          title: 'T-Shirt',\n          category: 'Clothing',\n          quantity: 1,\n          id: '1',\n          key: '1',\n          imgSRC: 'https://picsum.photos/131'\n        },\n        {\n          type: 'ADD_MERCH',\n          title: 'Earrings',\n          category: 'Accesory',\n          quantity: 5,\n          id: '2',\n          key: '2',\n          imgSRC: 'https://picsum.photos/132'\n        },\n        {\n          type: 'ADD_MERCH',\n          title: 'Music CD',\n          category: 'Music',\n          quantity: 5,\n          imgSRC: 'https://picsum.photos/133',\n          id: '3',\n          key: '3'\n        },\n        {\n          type: 'ADD_MERCH',\n          title: 'Figurine Set',\n          category: 'Misc',\n          quantity: 5,\n          id: '4',\n          key: '4',\n          imgSRC: 'https://picsum.photos/134'\n        }]\n        merchData.forEach((action) => {\n          dispatch(action)\n        });\n      this.setState({\n        dataLoaded: true\n      })\n    }\n\n\n    if (this.state.editing){\n      currentlyVisibleState = <EditMerch  \n      merch={this.state.selectedMerch}\n      onEditMerch={this.handleEditMerch}\n      />\n      buttontext = \"Return\"\n    }else if (this.state.selectedMerch != null){\n      currentlyVisibleState = <MerchDetail  \n      merch={this.state.selectedMerch} \n      onMerchBuy = {this.handleBuyMerch}\n      onMerchDelete={this.handleDeleteMerch}\n      onMerchEdit={this.handleEdit}\n      onMerchRestock={this.handleRestockMerch}\n      />\n      buttontext = \"Return\"\n    }else if (!this.state.formVisible){\n      currentlyVisibleState = <MerchList \n      mainMerchList = {this.props.mainMerchList} \n      OnMerchSelection={this.handleChangingSelectedMerch}\n      />\n      buttontext = \"Add Merch\";\n    }\n    else if (this.state.formVisible){\n      currentlyVisibleState = <NewMerchForm onNewMerchCreation={this.handleNewMerchFormSubmission}\n      buttontext = \"Submit\" />\n      buttontext = \"Return\";\n    }\n    return(\n      <React.Fragment>\n      {currentlyVisibleState}\n      <button onClick={this.handleClick} class='btn btn-light'>{buttontext}</button>\n      </React.Fragment>\n    );\n  }\n}\n\nStoreControl.propTypes = {\n  mainMerchList: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    mainMerchList: state\n  }\n}\n\nStoreControl = connect(mapStateToProps)(StoreControl);\n\nexport default StoreControl;","import React from \"react\";\nimport Header from \"./Header\";\nimport StoreControl from \"./StoreControl\";\n\nfunction App() {\n  const containerStyles = {\n    margin: 'auto',\n    paddingTop: '50px',\n    width: '80vw',\n    textAlign: 'center'\n  }\n  return (\n    <React.Fragment>\n      <div style={containerStyles}>\n        <Header />\n        <StoreControl />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {createStore} from 'redux';\nimport reducer from './reducers/merch-list-reducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\nstore.subscribe(() =>\nconsole.log(store.getState())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default (state = {}, action) => {\n  const { title, category, quantity, id, key, imgSRC } = action;\nswitch (action.type){\n  case 'ADD_MERCH':\n    return Object.assign({}, state, {\n      [id]: {\n        title: title,\n        category: category,\n        quantity: quantity,\n        id: id,\n        key: key,\n        imgSRC: imgSRC\n      }\n    });\n  case 'DELETE_MERCH':\n    let newState = {...state };\n    delete newState[id];\n    return newState;\n  default:\n      return state;\n  }\n};"],"sourceRoot":""}